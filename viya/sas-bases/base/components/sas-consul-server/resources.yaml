
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  name: sas-consul-server
  labels:
    app.kubernetes.io/name: sas-consul-server
    workload.sas.com/class: stateful
  annotations:
    sas.com/certificate-file-format: pem
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-consul-server
  serviceName: sas-consul-server-internal
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: consul
        app.kubernetes.io/name: sas-consul-server
        workload.sas.com/class: stateful
      annotations:
        sas.com/certificate-file-format: pem
    spec:
      tolerations:
        - key: "workload.sas.com/class"
          operator: "Equal"
          value: "stateful"
          effect: "NoSchedule"
        - key: "workload.sas.com/class"
          operator: "Equal"
          value: "stateless"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
          - weight: 50
            preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
      containers:
      - env:
        - name: CONSUL_BOOTSTRAP_EXPECT
          value: "1"
        - name: CONSUL_CLIENT_ADDRESS
          value: 0.0.0.0
        - name: CONSUL_DATACENTER_NAME
          value: viya
        - name: CONSUL_MANAGEMENT_TOKEN
          value: tobeusedfordemoonlymgmt
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - secretRef:
            name: sas-consul-client
        image: sas-consul-server
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /opt/sas/viya/home/bin/consul leave
        name: sas-consul-server
        ports:
        - containerPort: 8300
          name: server
          protocol: TCP
        - containerPort: 8301
          name: serflan-tcp
          protocol: TCP
        - containerPort: 8301
          name: serflan-udp
          protocol: UDP
        - containerPort: 8500
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ -z ${SAS_CERTIFICATE_FILE} ]; then reply=$(curl -s -L -o /dev/null -w %{http_code} http://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); else reply=$(curl -s -L -o /dev/null -w %{http_code} --cacert ${SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE} https://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); fi; if [ $reply -ne 200 ]; then exit 1; fi; test -f /tmp/healthy;
          initialDelaySeconds: 45
          periodSeconds: 30
        resources:
          requests:
            memory: "750M"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /opt/sas/viya/config/etc/consul.d
          name: tmp-volume
          subPath: consul.d
        - mountPath: /opt/sas/viya/config/etc/consul.d/default
          name: sitedefault-vol
        - mountPath: /consul/data
          name: sas-viya-consul-data-volume
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/tokens/consul/default
          name: tmp-volume
          subPath: consul-tokens
        - mountPath: /opt/sas/viya/config/tmp/sas-consul
          name: tmp-volume
          subPath: sas-consul
        - mountPath: /tmp
          name: tmp-volume
          subPath: tmp
      securityContext:
        fsGroup: 1001
      volumes:
      - configMap:
          items:
          - key: SITEDEFAULT_CONF
            mode: 438
            path: sitedefault.yml
          name: sas-consul-config
        name: sitedefault-vol
      - emptyDir: {}
        name: tmp-volume
  volumeClaimTemplates:
  - metadata:
      name: sas-viya-consul-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: sas-consul-server
  labels:
    app.kubernetes.io/name: sas-consul-server
spec:
  ports:
  - name: server
    port: 8300
    targetPort: server
  - name: serflan-tcp
    port: 8301
    protocol: TCP
    targetPort: serflan-tcp
  - name: serflan-udp
    port: 8301
    protocol: UDP
    targetPort: serflan-udp
  - name: http
    port: 8500
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-consul-server
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: sas-consul-server-internal
  labels:
    app.kubernetes.io/name: sas-consul-server-internal
spec:
  ports:
  - name: server-internal
    port: 8300
    targetPort: server
  - name: serflan-tcp-internal
    port: 8301
    protocol: TCP
    targetPort: serflan-tcp
  - name: serflan-udp-internal
    port: 8301
    protocol: UDP
    targetPort: serflan-udp
  - name: http-internal
    port: 8500
    targetPort: http
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: sas-consul-server
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    orchestration.sas.com/literal: "true"
  name: sas-consul-client
data: {}
