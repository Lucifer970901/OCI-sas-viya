
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
  name: sas-data-server-utility
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-server-utility
  template:
    metadata:
      annotations:
        sas.com/certificate-file-format: pem
      labels:
        app: sas-data-server-utility
        app.kubernetes.io/name: sas-data-server-utility
        workload.sas.com/class: stateless
    spec:
      tolerations:
        - key: "workload.sas.com/class"
          operator: "Equal"
          value: "stateful"
          effect: "NoSchedule"
        - key: "workload.sas.com/class"
          operator: "Equal"
          value: "stateless"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
          - weight: 50
            preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
      containers:
      - envFrom:
        - configMapRef:
            name: sas-shared-config
        - configMapRef:
            name: sas-go-config
            optional: true
        - configMapRef:
            name: sas-postgres-config
            optional: false
        - secretRef:
            name: sas-consul-client
        env:
        - name: PGO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pgouser-pgoadmin
              optional: true
        - name: PGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pgouser-pgoadmin
              optional: true
        resources:
          requests:
            memory: "53Mi"
            cpu: "10m"
          limits:
            memory: "530Mi"
            cpu: "100m"
        image: sas-data-server-utility
        imagePullPolicy: IfNotPresent
        name: sas-data-server-utility
      serviceAccount: sas-data-server-utility

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sas-data-server-utility

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sas-data-server-utility
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch"]
- apiGroups: ["crunchydata.com"]
  resources: ["pgclusters"]
  verbs: ["get", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sas-data-server-utility
subjects:
- kind: ServiceAccount
  name: sas-data-server-utility
roleRef:
  kind: Role
  name: sas-data-server-utility
  apiGroup: rbac.authorization.k8s.io
