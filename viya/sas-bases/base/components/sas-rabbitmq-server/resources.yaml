
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sas-rabbitmq-server

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: sas-rabbitmq-server
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sas-rabbitmq-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-rabbitmq-server
subjects:
- kind: ServiceAccount
  name: sas-rabbitmq-server

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/contextRoot: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
  name: sas-rabbitmq-server
spec:
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: management
    port: 15672
    protocol: TCP
    targetPort: management
  - name: erlang
    port: 25672
    protocol: TCP
    targetPort: erlang
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: epmd
  - name: metrics
    port: 15692
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: sas-rabbitmq-server
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/admin: namespace
    workload.sas.com/class: stateful
  name: sas-rabbitmq-server
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-rabbitmq-server
  serviceName: sas-rabbitmq-server
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15692"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
      creationTimestamp: null
      labels:
        app: sas-rabbitmq-server
        app.kubernetes.io/name: sas-rabbitmq-server
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
      containers:
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - configMapRef:
            name: sas-java-config
        - secretRef:
            name: sas-consul-client
        - secretRef:
            name: sas-rabbitmq-server-erlang-cookie-secret
        image: sas-rabbitmq-server
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/liveness.sh
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 120
        name: sas-rabbitmq-server
        ports:
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 15672
          name: management
          protocol: TCP
        - containerPort: 25672
          name: erlang
          protocol: TCP
        - containerPort: 4369
          name: epmd
          protocol: TCP
        - containerPort: 15692
          name: metrics
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/readiness.sh
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 120
        resources:
          limits:
            cpu: 4000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - mountPath: /rabbitmq/data
          name: sas-viya-rabbitmq-data-volume
      initContainers:
      - env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-rabbitmq-server-erlang-cookie-secret
        - name: SAS_KEYS_KEY_NAMES
          value: RABBITMQ_ERLANG_COOKIE
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        image: sas-certframe
        name: sas-certframe-token-generator
        volumeMounts:
        - mountPath: /security
          name: security
      securityContext:
        fsGroup: 1001
      serviceAccountName: sas-rabbitmq-server
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - emptyDir: {}
        name: security
  volumeClaimTemplates:
  - metadata:
      name: sas-viya-rabbitmq-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
